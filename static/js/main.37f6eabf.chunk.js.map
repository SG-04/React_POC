{"version":3,"sources":["serviceWorker.js","components/StyleForm.js","components/validate.js","components/renderField.js","components/PersonalDet.js","components/EmploymentDet.js","components/ReviewScreen.js","components/Forms.js","index.js"],"names":["Boolean","window","location","hostname","match","Form","styled","form","FormGroup","div","Label","label","Input","input","Field1","Message","Button","button","props","primary","validate","values","errors","firstname","lastname","email","test","gender","dob","today","Date","birthDate","age","getFullYear","m","getMonth","getDate","empid","oemailid","designation","renderField","type","meta","touched","error","placeholder","renderError","PersonalDet","handleSubmit","useState","setFirstname","setLastname","setEmailid","setDateofbirth","Fragment","onSubmit","Field","name","component","value","onChange","e","target","reduxForm","destroyOnUnmount","forceUnregisterOnUnmount","personalSelector","formValueSelector","connect","state","personalDetails","renderDesignation","design","map","val","key","EmploymentDet","previousPage","setEmpid","setOemailid","onClick","employeeSelector","employeeDetails","ReviewScreen","data","disabled","defaultValue","console","log","JSON","stringify","reactpoc","Forms","nextPage","bind","page","steps","title","this","setState","activeStep","Component","reducers","formReducer","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.37f6eabf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const Form = styled.form`\r\n\tmax-width: 500px;\r\n\tmargin: 0 auto;\r\n\t background: #0e101c;\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n\tcolor: white;\r\n    display: block;\r\n\twidth: 300px;\r\n\tmargin: 20px auto;\r\n`;\r\n\r\n\r\nexport const Label = styled.label`\r\n\tline-height: 2;\r\n  text-align: left;\r\n  display: block;\r\n  margin-bottom: 13px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: 200;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\tdisplay: block;\r\n\tbox - sizing: border - box;\r\n\twidth: 100 %;\r\n\tborder - radius: 4px;\r\n\tborder: 1px solid white;\r\n\tpadding: 10px 15px;\r\n\tmargin - bottom: 10px;\r\n\tfont - size: 14px;\r\n`;\r\n\r\n\r\n\r\nexport const Field1 = styled.input`\r\n\tdisplay: block;\r\n\tbox - sizing: border - box;\r\n\twidth: 100 %;\r\n\tborder - radius: 4px;\r\n\tborder: 1px solid white;\r\n\tpadding: 10px 15px;\r\n\tmargin - bottom: 10px;\r\n\tfont - size: 14px;\r\n\tcolor:#1E90FF;\r\n`;\r\n\r\nexport const Message = styled.label`\r\n\tmargin-bottom: 0.5em;\r\n\tcolor: red;\r\n    display: block;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  /* Adapt the colors based on primary prop */\r\n  background: ${props => props.primary ? \"#1E90FF\" : \"white\"};\r\n  color: ${props => props.primary ? \"white\" : \"#1E90FF\"};\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #1E90FF;\r\n  border-radius: 3px;\r\n`;\r\n\r\n\r\n\r\n/*padding: 0.5em;\r\ncolor: black;\r\nbackground: #DCDCDC;\r\nborder: none;\r\nborder - radius: 3px;\r\nwidth: 100 %;\r\nmargin - bottom: 0.5em; inp*/\r\n\r\n/*margin - bottom: 0.5em;\r\ncolor:  #1E90FF;\r\ndisplay: block; label*/","const validate = values => {\r\n    const errors = {};\r\n    if (!values.firstname) {\r\n        errors.firstname = 'Required';\r\n    }\r\n    if (!values.lastname) {\r\n        errors.lastname = 'Required';\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.gender) {\r\n        errors.gender = 'Required';\r\n    }\r\n    if (!values.dob) {\r\n        errors.dob = 'Required'\r\n    } else if (values.dob) {\r\n        var today = new Date();\r\n        var birthDate = new Date(values.dob);\r\n        var age = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        if (age < 18) {\r\n            errors.dob = \"Your age should be atleast 18 years \";\r\n        } \r\n    }\r\n\r\n\r\n    if (!values.empid) {\r\n        errors.empid = 'Required'\r\n    }\r\n\r\n    if (!values.oemailid) {\r\n        errors.oemailid = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.oemailid)) {\r\n        errors.oemailid = 'Invalid email address'\r\n    }\r\n    if (!values.designation) {\r\n        errors.designation = 'Required'\r\n    }\r\n    return errors;\r\n};\r\n\r\nexport default validate;\r\n","import React from 'react';\r\nimport {  Input, Message,Label } from \"./StyleForm\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <Label>{label}</Label>\r\n        <div>\r\n            <Input {...input} placeholder={label} type={type} />\r\n            <Message>{touched && error && <span>{error}</span>}</Message>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default renderField;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\r\nimport { Form, FormGroup, Button, Label, Message } from \"./StyleForm\";\r\nimport validate from './validate';\r\nimport renderField from './renderField';\r\n\r\nconst renderError = ({ meta: { touched, error } }) =>\r\n    touched && error ?<Message> <span>{error}</span></Message> : false;\r\n\r\n\r\nlet PersonalDet = props => {\r\n    const { handleSubmit} = props;\r\n\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [email, setEmailid] = useState('');\r\n    const [dob, setDateofbirth] = useState('');\r\n    //const [gender, setGender] = useState('')\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    Personal Details Form\r\n                 </FormGroup>\r\n                < FormGroup >\r\n                    <Field\r\n                        name=\"firstname\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        label=\"First Name\"\r\n                        value={firstname}\r\n                        onChange={(e) => setFirstname(e.target.value)}\r\n                    />\r\n                </FormGroup >\r\n                <FormGroup>\r\n                    <Field\r\n                        name=\"lastname\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        label=\"Last Name\"\r\n                        value={lastname}\r\n                        onChange={(e) => setLastname(e.target.value)}\r\n                    />\r\n\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Field\r\n                        name=\"email\"\r\n                        component={renderField}\r\n                        type=\"email\"\r\n                        label=\"Email Id\"\r\n                        value={email}\r\n                        onChange={(e) => setEmailid(e.target.value)}\r\n                    />\r\n                </FormGroup> \r\n                <FormGroup>\r\n                    <Field\r\n                        name=\"dob\"\r\n                        component={renderField}\r\n                        type=\"date\"\r\n                        label=\"Date of Birth\"\r\n                        value={dob}\r\n                        onChange={(e) => setDateofbirth(e.target.value)}\r\n                    />                 \r\n                </FormGroup>                \r\n                <FormGroup>\r\n                    <Label>Gender</Label>\r\n                    <Label>\r\n                        <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"Male\"  />\r\n                        {' '}\r\n            Male\r\n          </Label>\r\n                    <Label>\r\n                        <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"Female\"  />\r\n                        {' '}\r\n            Female\r\n          </Label>              \r\n                <Field name=\"gender\" component={renderError} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Button type=\"submit\" primary >Proceed</Button >\r\n                </FormGroup>\r\n            </Form>\r\n\r\n\r\n        </React.Fragment>\r\n           \r\n        \r\n    );\r\n};\r\n\r\nPersonalDet= reduxForm({\r\n    form: 'reactpoc', //                 <------ same form name\r\n    destroyOnUnmount: false, //        <------ preserve form data\r\n    forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\r\n    validate,\r\n})(PersonalDet);\r\n\r\n const personalSelector = formValueSelector('reactpoc') \r\n\r\nPersonalDet = connect(state => {\r\n    const personalDetails = personalSelector(state, 'firstname', 'lastname', 'email', 'dob',  'gender')\r\n    return {\r\n        personalDetails\r\n    }\r\n})(PersonalDet)\r\n\r\nexport default PersonalDet\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm, formValueSelector} from 'redux-form';\r\nimport validate from './validate';\r\nimport renderField from './renderField';\r\nimport { Form, FormGroup, Label,  Message, Button } from \"./StyleForm\";\r\n\r\n\r\nconst renderDesignation = ({ input, meta: { touched, error } }) => (\r\n    <div>\r\n        <select {...input}>\r\n            <option value=\"\">Select designation</option>\r\n            {design.map(val => <option value={val} key={val} >{val}</option>)}\r\n        </select>\r\n        <Message>{touched && error && <span>{error}</span>}</Message>\r\n    </div>\r\n);\r\n\r\nconst design = [\"Group Project Manager\", \"Project Manager\", \"Technology Analyst\", \"Senior Systems Engineer\", \"Systems Engineer\"]\r\n\r\nlet EmploymentDet = props => {\r\n    const { handleSubmit, previousPage } = props;\r\n\r\n    const [empid, setEmpid] = useState('');\r\n    const [oemailid, setOemailid] = useState('');\r\n   // const [designation, setDesignation] = useState('');\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    Employment Details Form\r\n                 </FormGroup>\r\n                <FormGroup>\r\n                    <Field\r\n                        name=\"empid\"\r\n                        component={renderField}\r\n                        type=\"text\"\r\n                        label=\"Employee Id\"\r\n                        value={empid}\r\n                        onChange={(e) => setEmpid(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n\r\n                    \r\n               <FormGroup>\r\n                            <Field name=\"oemailid\" component={renderField} type=\"email\" label=\"Company Email Id\"  value={oemailid}\r\n                                onChange={(e) => setOemailid(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Designation</Label>\r\n                    <Field name=\"designation\" component={renderDesignation} \r\n                        />\r\n\r\n                </FormGroup>\r\n                <Button type=\"button\" primary onClick={previousPage}>Previous</Button >\r\n                <Button type=\"submit\" primary  >Review </Button >\r\n              \r\n            </Form>\r\n\r\n\r\n        </React.Fragment>\r\n\r\n            \r\n    );\r\n};\r\n\r\n\r\nEmploymentDet=  reduxForm({\r\n    form: 'reactpoc', //                 <------ same form name\r\n    destroyOnUnmount: false, //        <------ preserve form data\r\n    forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\r\n    validate,\r\n})(EmploymentDet);\r\n\r\n\r\n\r\nconst employeeSelector = formValueSelector('reactpoc') \r\n\r\nEmploymentDet = connect(state => {\r\n    const employeeDetails = employeeSelector(state, 'empid', 'oemailid', 'designation')\r\n    return {\r\n        employeeDetails\r\n    }\r\n})(EmploymentDet)\r\n\r\n\r\nexport default EmploymentDet\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { reduxForm } from 'redux-form';\r\nimport { Form, FormGroup, Button, Field1,Label} from \"./StyleForm\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet ReviewScreen = props => {\r\n\r\n    const {  previousPage } = props;\r\n\r\n    const { data } = props;  \r\n\r\n     function onSubmit() {\r\n       console.log(JSON.stringify(data, null, 2));\r\n        // window.alert('Thank You');\r\n     };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form >\r\n                <FormGroup>\r\n                    Review Personal Details \r\n                 </FormGroup>\r\n                <FormGroup>\r\n                    <Label>First Name</Label>\r\n                    <Field1\r\n                        name=\"firstname\"\r\n                        component=\"input\"\r\n                        type=\"text\"\r\n                        disabled={true}\r\n                        defaultValue={data.firstname}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Last Name</Label>\r\n                    <Field1\r\n                        name=\"lastname\"\r\n                        component=\"input\"\r\n                        type=\"text\"\r\n                        disabled={true}\r\n                        defaultValue={data.lastname}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Email Id</Label>\r\n                    <Field1\r\n                        name=\"email\"\r\n                        component=\"input\"\r\n                        type=\"email\"\r\n                        disabled={true}\r\n                        defaultValue={data.email}\r\n                    />\r\n\r\n                </FormGroup>\r\n\r\n                < FormGroup >\r\n                    <Label>Date of Birth</Label>\r\n                    <Field1\r\n                        name=\"dob\"\r\n                        component=\"input\"\r\n                        type=\"date\"\r\n                        disabled={true}\r\n                        defaultValue={data.dob}\r\n                    />\r\n\r\n                </FormGroup >\r\n\r\n                <FormGroup>\r\n                    <Label>Gender</Label>\r\n                    <Field1\r\n                        name=\"gender\"\r\n                        component=\"input\"\r\n                        type=\"text\"\r\n                        disabled={true}\r\n                        defaultValue={data.gender}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    Review Employment Details \r\n                 </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Employee Id</Label>\r\n                    <Field1\r\n                        name=\"empid\"\r\n                        component=\"input\"\r\n                        type=\"text\"\r\n                        disabled={true}\r\n                        defaultValue={data.empid}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Company Email Id</Label>\r\n                    <Field1 name=\"oemailid\" component=\"input\" type=\"email\" disabled={true}\r\n                        defaultValue={data.oemailid}\r\n                         />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Designation</Label>\r\n                    <Field1 name=\"designation\" component=\"input\" disabled={true}\r\n                        defaultValue={data.designation}\r\n                         />\r\n                </FormGroup>\r\n               \r\n                <Button type=\"button\" primary onClick={previousPage}>Employee Details </Button >\r\n                <Button type=\"submit\" primary onClick={()=>onSubmit()} >Submit </Button > \r\n\r\n                <FormGroup>\r\n\r\n                </FormGroup>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nReviewScreen = reduxForm({\r\n    form: 'form',// a unique identifier for this form\r\n})(ReviewScreen);\r\n\r\n\r\n\r\nfunction mapStateToProps(val) {\r\n    const data = val.form.reactpoc.values\r\n    return {\r\n        data\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReviewScreen)\r\n","import React, { Component } from 'react';\r\nimport PersonalDet from './PersonalDet';\r\nimport EmploymentDet from './EmploymentDet';\r\nimport ReviewScreen from './ReviewScreen';\r\nimport Stepper from 'react-stepper-horizontal';\r\n\r\nclass Forms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.previousPage = this.previousPage.bind(this);\r\n        this.state = {\r\n            page: 0,\r\n            steps: [\r\n                { title: 'Personal Details' },\r\n                { title: 'Employment Details' },\r\n                { title: 'Review Screen' }\r\n            ]\r\n        };\r\n       \r\n    }\r\n    nextPage() {\r\n        this.setState({ page: this.state.page + 1 });\r\n    }\r\n\r\n    previousPage() {\r\n        this.setState({ page: this.state.page - 1 });\r\n    }\r\n\r\n    render() {\r\n        const { onSubmit } = this.props;\r\n        const { page,steps } = this.state;\r\n        return (\r\n            <div>\r\n            <Stepper steps={steps} activeStep={page} />\r\n\r\n                {page === 0 && <PersonalDet onSubmit={this.nextPage} />}\r\n                {page === 1 &&\r\n                    <EmploymentDet\r\n                        previousPage={this.previousPage}\r\n                        onSubmit={this.nextPage}\r\n                    />}\r\n                {page === 2 &&\r\n                    <ReviewScreen\r\n                    previousPage={this.previousPage}\r\n                    onSubmit={onSubmit}\r\n                    />}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Forms;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, combineReducers} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Forms from './components/Forms';\r\n\r\n\r\n\r\nconst reducers = { form: formReducer };\r\nconst reducer = combineReducers(reducers, { data: {} });\r\nconst store = createStore(reducer);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Forms />\r\n    </Provider>,\r\n        document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}